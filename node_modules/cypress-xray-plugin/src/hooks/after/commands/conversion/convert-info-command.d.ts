import { IssueTypeDetails } from "../../../../types/jira/responses/issue-type-details";
import { IssueUpdate } from "../../../../types/jira/responses/issue-update";
import { InternalJiraOptions, InternalXrayOptions } from "../../../../types/plugin";
import { MultipartInfo } from "../../../../types/xray/requests/import-execution-multipart-info";
import { Logger } from "../../../../util/logging";
import { Command, Computable } from "../../../command";
import { RunData, TestExecutionIssueData, TestExecutionIssueDataServer } from "./util/multipart-info";
interface Parameters {
    jira: Pick<InternalJiraOptions, "projectKey" | "testExecutionIssueDescription" | "testPlanIssueKey">;
    xray: Pick<InternalXrayOptions, "testEnvironments" | "uploadScreenshots">;
}
export declare abstract class ConvertInfoCommand extends Command<MultipartInfo, Parameters> {
    private readonly testExecutionIssueType;
    private readonly runInformation;
    private readonly info?;
    constructor(parameters: Parameters, logger: Logger, testExecutionIssueType: Computable<IssueTypeDetails>, runInformation: Computable<RunData>, info?: {
        custom?: Computable<IssueUpdate>;
        fieldIds?: {
            testEnvironmentsId?: Computable<string>;
            testPlanId?: Computable<string>;
        };
        summary?: Computable<string>;
    });
    protected computeResult(): Promise<MultipartInfo>;
    protected abstract buildInfo(runInformation: RunData, testExecutionIssueData: TestExecutionIssueData): MultipartInfo | Promise<MultipartInfo>;
}
export declare class ConvertInfoServerCommand extends ConvertInfoCommand {
    private readonly testEnvironmentsId?;
    private readonly testPlanId?;
    constructor(...[options, logger, testExecutionIssueType, runInformation, info]: ConstructorParameters<typeof ConvertInfoCommand>);
    protected buildInfo(runInformation: RunData, testExecutionIssueData: TestExecutionIssueDataServer): Promise<MultipartInfo>;
}
export declare class ConvertInfoCloudCommand extends ConvertInfoCommand {
    protected buildInfo(runInformation: RunData, testExecutionIssueData: TestExecutionIssueData): MultipartInfo;
}
export {};
