import { EvidenceCollection } from "../../../../../context";
import { CypressRunResultType } from "../../../../../types/cypress/cypress";
import { InternalCucumberOptions, InternalJiraOptions, InternalPluginOptions, InternalXrayOptions } from "../../../../../types/plugin";
import { XrayTest } from "../../../../../types/xray/import-test-execution-results";
import { Logger } from "../../../../../util/logging";
import { Command, Computable } from "../../../../command";
interface Parameters {
    cucumber?: Pick<InternalCucumberOptions, "featureFileExtension">;
    evidenceCollection: EvidenceCollection;
    jira: Pick<InternalJiraOptions, "projectKey">;
    plugin: Pick<InternalPluginOptions, "normalizeScreenshotNames">;
    useCloudStatusFallback?: boolean;
    xray: Pick<InternalXrayOptions, "status" | "uploadScreenshots">;
}
export declare class ConvertCypressTestsCommand extends Command<[XrayTest, ...XrayTest[]], Parameters> {
    private readonly results;
    constructor(parameters: Parameters, logger: Logger, results: Computable<CypressRunResultType>);
    protected computeResult(): Promise<[XrayTest, ...XrayTest[]]>;
    private getTestRunData;
    private getTest;
    private getXrayEvidence;
    private willBeUploaded;
}
export {};
