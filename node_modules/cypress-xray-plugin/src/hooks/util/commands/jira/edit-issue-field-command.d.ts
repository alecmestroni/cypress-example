import { JiraClient } from "../../../../client/jira/jira-client";
import { StringMap } from "../../../../types/util";
import { Logger } from "../../../../util/logging";
import { Command, Computable } from "../../../command";
import { FieldValueMap } from "./get-field-values-command";
interface Parameters<F extends keyof FieldValueMap> {
    field: F;
    jiraClient: JiraClient;
}
export declare class EditIssueFieldCommand<F extends keyof FieldValueMap> extends Command<string[], Parameters<F>> {
    private readonly fieldId;
    private readonly fieldValues;
    constructor(parameters: Parameters<F>, logger: Logger, fieldId: Computable<string>, fieldValues: Computable<StringMap<FieldValueMap[F]>>);
    protected computeResult(): Promise<string[]>;
}
export {};
