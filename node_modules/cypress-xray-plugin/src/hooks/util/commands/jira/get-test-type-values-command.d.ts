import { XrayClientCloud } from "../../../../client/xray/xray-client-cloud";
import { StringMap } from "../../../../types/util";
import { Logger } from "../../../../util/logging";
import { Command, Computable } from "../../../command";
import { JiraField } from "./extract-field-id-command";
import { GetFieldValuesCommand } from "./get-field-values-command";
export declare class GetTestTypeValuesCommandServer extends GetFieldValuesCommand<JiraField.TEST_TYPE> {
    protected computeResult(): Promise<StringMap<string>>;
}
interface Parameters {
    projectKey: string;
    xrayClient: XrayClientCloud;
}
export declare class GetTestTypeValuesCommandCloud extends Command<StringMap<string>, Parameters> {
    private readonly issueKeys;
    constructor(parameters: Parameters, logger: Logger, issueKeys: Computable<string[]>);
    protected computeResult(): Promise<StringMap<string>>;
}
export {};
